{"pdfpcFormat":1,"duration":15,"endSlide":33,"disableMarkdown":true,"noteFontSize":20,"pages":[{"idx":0,"label":"1","overlay":0,"note":"Es entstehen viele Anwendungen die Wahrnehmung\noder Interaktion in 3D benötigen, und damit bedarf\nfür deep learning spezialisiert für räumliche Anwendungen\nshafft.\n\n- viele Anwendungen im 3D bereich entstehen\n- brauchen Wahrnehmung oder Interaktion in 3D\n- um diese zu bedienen: hoher bedarf\n- spezifisch auf 3D zugeschnitten\n- Erster: PointNet\n\n"},{"idx":2,"label":"3","overlay":0,"note":"Auszug an Beispielen\n"},{"idx":3,"label":"4","overlay":0,"note":"- Am nächsten zu ursprünglichen Tiefendaten\n- Kanonische Form: andere lassen sich einfach umwandeln\nAllerdings: wenig Arbeit zu Point Cloud Features\n"},{"idx":4,"label":"5","overlay":0,"note":"Die meisten zuvor existierenden Features sind\nnur für bestimmte Aufgaben.\nSkaliert sehr schlecht für neue Aufgaben.\n\nDie Tabelle listet ein paar davon.\n"},{"idx":5,"label":"6","overlay":0,"note":"Es gibt bereits Arbeiten auf Point Cloud.\n\n\nAllerdings wandeln diese Punktwolken erst\nin andere Darstellungen um, und verwenden\nanschließend bereits existierende Architekturen.\n"},{"idx":6,"label":"7","overlay":0,"note":"Frage: Können wir Feature Learning\ndirekt auf Punktwolken erreichen?\n\n\nDie Antwort ist ja.\n"},{"idx":7,"label":"8","overlay":0,"note":"Ergebnis davon: PointNet, einheitliche\narchitektur für verschiedene Aufgaben\n\nEnde-zu-Ende lernen für Punktwolken\nVereinheitlichen von zuvor spezialisierten Aufgaben\n"},{"idx":8,"label":"9","overlay":0,"note":"Herausforderung: Umgang mit Punktwolken. Muss:\n- Unsortierte Mengen als eingabe\n- Keine Kanonische Höherdimensionale Sortierung\n- Invarianz über Geometrische Transformationen\n"},{"idx":9,"label":"10","overlay":0,"note":"Erste Herausforderung:\n- umgehen mit beliebigen Eingabe-permutation\n- wir verwenden Vektoren um Eingaben darzustellen\n- können auch weitere Dimensionen haben\n- keine stabile Sortierung der Punkte möglich\n- !tricks: neu Messen, anderes Datenset, anderer Sensor\n- Mathematisch: tricksen nicht Möglich\n"},{"idx":10,"label":"11","overlay":0,"note":"Mathematisch: neuronales Netz nur eine Funktion\nFunktional betrachtet: Symmetriedarstellung über fkt\n\n\nSymmetrisch, wenn Funktionswert bei Argumentenvertausch\ngleich bleibt.\n\nEs gibt viele Symmetrische Funktionen. Beispiele\n\nFrage wird: Wie können eine Symmetrische Funktion in\nArchitektur von Neuronalem Netz integrieren?\n"},{"idx":11,"label":"12","overlay":0,"note":"Erinnerung: Konkatenation von Funktionen kann andere\nFunktionen approximieren/darstellen.\n\nKonkret können wir mit der konkatenation y o g o h\nbeliebige symmetrische Funktionen darstellen.\n"},{"idx":12,"label":"13","overlay":0,"note":"Bekannt: NN sind allgemeine funktionsapproximatoren\nDamit ziemlich trivial: PointNet auch für Permutationen\n\nNatürlich braucht eine höhere Genauigkeit mehr Parameter\n\nHausdorff: Topologischer Raum mit disjunkten Nachbarschaften\n"},{"idx":13,"label":"14","overlay":0,"note":"MLP: Dense, Fully-Connected with ReLU\nNote that y is shared across all points\n\nAndere symmetrische funktionen gehen auch\n"},{"idx":14,"label":"15","overlay":0,"note":"Relevant: Andere Herausforderung\n\nKlassifikation soll unverändert sein über:\n- Translation / Bewegung im Raum\n- Rotation\n- Skalierung\nReflektion sollte bereits über Datensatz enthalten sein\n"},{"idx":15,"label":"16","overlay":0,"note":"Grundidee: Eingabe Normalisieren\nFür Point Cloud, Transformation nur Matrixmult\n\nPointNet: symmetrisch allgemeiner Funktionsapproximator\n\nVerwendung, um datenabhängige Transformationsmatrix\n(Normalisierung auf Kanonischen 1-Cube) zu generieren.\n"},{"idx":16,"label":"17","overlay":0,"note":"Wir wollen auch mehr als nur die Eingabe Normalisieren\nKonkret: Lokaler Feature Vektor größe 64\n"},{"idx":17,"label":"18","overlay":0,"note":"Schritte einzeln Erklären\n"},{"idx":18,"label":"19","overlay":0,"note":"Zusammenführen von lokaler einbettung und globalen\nFeaturevektor und anschließendes weiterverarbeiten\n\nErgebnis: matrix mit Segmentationswerten\n"},{"idx":19,"label":"20","overlay":0,"note":"In Klassifikation wurde SOTA erreicht.\n"},{"idx":20,"label":"21","overlay":0,"note":"Andere Aufgabe: Segmentieren von (partiellen) Eingaben\n"},{"idx":21,"label":"22","overlay":0,"note":"Hier wurde eine neue SOTA gesetzt\n"},{"idx":23,"label":"24","overlay":0,"note":"Sehr Robust gegenüber dem:\n- Löschen von einzelnen Punkten\n- hinzufügen von Ausreißern\n- hinzufügen von extremen Rauschen\n\n\nAlso allgemeinen störungen in Daten.\nNext: Anschauen woran das liegt.\n"},{"idx":25,"label":"26","overlay":0,"note":"Welche Punkte beeinflussen den Global Feature vektor?\nWelche kann man hinzufügen, ohne?\n\nEs sollte klar sein, dass nicht alle beitragen werden\naufgrund von max pooling\n"},{"idx":26,"label":"27","overlay":0,"note":"kritischen Punkte bilden ungefähr ursprüngliche Form\nObere Schranke füllt zwischenräume\n\nErinnerung an Robustheit ggü fehlenden Punkten\n"},{"idx":27,"label":"28","overlay":0,"note":"OOS = Out Of Specification\nAlso nicht im Trainingsdatensatz enthaltene.\nHier gehen teilweise dinge kaputt\n\nErkenntnis: verallgemeinert gut\n"},{"idx":28,"label":"29","overlay":0,"note":"Visualisieren, was einzelne globale Features aktiviert\n"},{"idx":29,"label":"30","overlay":0,"note":"15 zufällig ausgewählte Features (der 1024)\nMan sieht, wie erwartet: räumliche Abdeckung\n"},{"idx":30,"label":"31","overlay":0,"note":"Auswirkungen von PointNet erstmal nicht wenig\nAnfang schreiben: ~7300\nImmernoch höchst relevant\n"},{"idx":31,"label":"32","overlay":0,"note":"Was auch passiert ist, ist dass es als modul / layer\nverwendet wird"}]}